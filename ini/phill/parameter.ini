! =============================================================================== !
! MAKEFILE PARAMETER (put a "#" in front, NO blanks!)
! =============================================================================== !
! eqn: navierstokes, linearscalaradvection, maxwell
#EQNSYS=navierstokes
! use parabolic equations (undefined by default)
! switch: full Navierstokes or Euler for EQNSYS navierstokes
!         with diffusion or without diffusion for EQNSYS linearscalaradvection
#PARABOLIC=T
! node type: 1...Gauss, 2...Gauss-Lobatto
#NODETYPE=1
! Riemann solver: 1...LF, 2...HLLC, 3...Roe
#RIEMANN=4
! Lifting Method: br1,br2
#LIFTING=br1
! Viscosity: 0...Constant, 1...Sutherland, 2...power law
#VISC=0
! Parallel execution: EMPTY...Off, T...On (MPI)
#MPI=T
! optional: fixed number of elements
#NELEMS=
! optional: fixed polynomial degree
#N=
! which testcase should be compiled? current options: (see folder src/testcase/)
! default - standard, empty testcase.f90
#TESTCASE=phill

! =============================================================================== !
! OUTPUT 
! =============================================================================== !
ProjectName   = phill
Logging       = F
AnalyzeToFile = F
WriteErrorFiles = F
WritePartitionInfo = F
outputFormat  = 0  ! =0, no visu, >0 visualize

! =============================================================================== !
! INTERPOLATION
! =============================================================================== !
doOverintegration=T
N             = 4  ! Polynomial degree
NUnder        = 3
GeometricNGeo = 4  ! Degree of mesh representation
NAnalyze      = 6 ! Number of analyze points
NVisu         = 6
Filter_relax  = 0.0

! =============================================================================== !
! MESH
! =============================================================================== !
!MeshFile      = PeriodicHill_mesh_32x32x64_N2.h5
MeshFile      = PeriodicHill_mesh_16x16x32_N4.h5
useCurveds    = T
! if boundaries have to be changed (else they are used from Mesh directly):
BoundaryName=WALL
BoundaryType=(/4,1/)

! Exact function for startup
!BoundaryName=INFLOW
!BoundaryType=(/2,1/)
!BoundaryName=OUTFLOW
!BoundaryType=(/2,1/)

! =============================================================================== !
! EQUATION
! =============================================================================== !
UseNonDimensionalEqn = T
BulkMach     = 0.1
BulkReynolds = 2800
Pr           = 0.71
kappa        = 1.4

IniExactFunc  = 13337
IniRefState   = 1
RefState      = (/1.,1.,0.,0.,71.4285714286/)

massFlowRef   = 9.1575
massFlowBCName= INFLOW


! R=p=71.42857
! T=rho=1
! ubulk=1
! Ainlet=2.035*4.5=9.1575 => m*=9.1575
! mu0= 1/Re=3.4714286e-4 | Re 2800     mu0 = 9.4384143e-5 | Re 10595
! =============================================================================== !
! TIMEDISC
! =============================================================================== !
tend       = 1500.0  ! End time
CFLscale   = 1.25 ! Scaling of theoretical CFL number
DFLscale   = 1.25 ! Scaling of theoretical DFL number

! =============================================================================== !
! ANALYZE
! =============================================================================== !
Analyze_dt    = 1.0 ! Timestep of analyze outputs
nWriteData    = 20

CalcErrorNorms=   T ! Calculate error norms
CalcBodyForces=   F ! Calculate body forces (BC 4/9) 
CalcBulkVelocity= F ! Calculate bulk velocity/momentum
CalcMeanFlux=     F ! Calculate mean flux of conservative vars through boundary 
CalcWallVelocity= F ! Calculate velocities at the walls (BC 4/9) 
CalcTimeAverage=  F ! Calculate time average of field data 
VarNameAvg=Density
VarNameAvg=VelocityX
VarNameAvg=VelocityY
VarNameAvg=VelocityZ
VarNameAvg=Pressure
VarNameFluc=VelocityX
VarNameFluc=VelocityY
VarNameFluc=uv
VarNameFluc=TKE
