function [F dF]=NewtonFunc(xi,x,P1,P2,P3,P4,P5,P6,P7,P8)
%Example function to try out Newton's Method
%
%n=length(x);
%y=zeros(size(x)); %Not necessary for a small vector
%dy=zeros(n,n); %Not necessary for a small matrix

F=  1/8 * (P1*(1-xi(1)) * (1-xi(2)) * (1-xi(3)) ...
         + P2*(1+xi(1)) * (1-xi(2)) * (1-xi(3)) ...
         + P3*(1+xi(1)) * (1+xi(2)) * (1-xi(3)) ...
         + P4*(1-xi(1)) * (1+xi(2)) * (1-xi(3)) ...
         + P5*(1-xi(1)) * (1-xi(2)) * (1+xi(3)) ...
         + P6*(1+xi(1)) * (1-xi(2)) * (1+xi(3)) ...
         + P7*(1+xi(1)) * (1+xi(2)) * (1+xi(3)) ...
         + P8*(1-xi(1)) * (1+xi(2)) * (1+xi(3)))...
         - x;
     
dF(:,1)=1/8 * ((P1-P2)*(1-xi(2))*(1-xi(3)) ...
              +(P3-P4)*(1+xi(2))*(1-xi(3)) ...
              +(P6-P5)*(1-xi(2))*(1+xi(3)) ...
              +(P7-P8)*(1+xi(2))*(1+xi(3)));
          
dF(:,2)=1/8 * ((P4-P1)*(1-xi(1))*(1-xi(3)) ...
              +(P3-P2)*(1+xi(1))*(1-xi(3)) ...
              +(P8-P5)*(1-xi(1))*(1+xi(3)) ...
              +(P7-P6)*(1+xi(1))*(1+xi(3)));

dF(:,3)=1/8 * ((P5-P1)*(1-xi(1))*(1-xi(2)) ...
              +(P6-P2)*(1+xi(1))*(1-xi(2)) ...
              +(P7-P3)*(1+xi(1))*(1+xi(2)) ...
              +(P8-P4)*(1-xi(1))*(1+xi(2)));

end